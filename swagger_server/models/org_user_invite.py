# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class OrgUserInvite(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, email: str=None, user_org_id: str=None):  # noqa: E501
        """OrgUserInvite - a model defined in Swagger

        :param email: The email of this OrgUserInvite.  # noqa: E501
        :type email: str
        :param user_org_id: The user_org_id of this OrgUserInvite.  # noqa: E501
        :type user_org_id: str
        """
        self.swagger_types = {
            'email': str,
            'user_org_id': str
        }

        self.attribute_map = {
            'email': 'email',
            'user_org_id': 'user_org_id'
        }
        self._email = email
        self._user_org_id = user_org_id

    @classmethod
    def from_dict(cls, dikt) -> 'OrgUserInvite':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The org_user_invite of this OrgUserInvite.  # noqa: E501
        :rtype: OrgUserInvite
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self) -> str:
        """Gets the email of this OrgUserInvite.


        :return: The email of this OrgUserInvite.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email: str):
        """Sets the email of this OrgUserInvite.


        :param email: The email of this OrgUserInvite.
        :type email: str
        """

        self._email = email

    @property
    def user_org_id(self) -> str:
        """Gets the user_org_id of this OrgUserInvite.

        The id of the user within the organization  # noqa: E501

        :return: The user_org_id of this OrgUserInvite.
        :rtype: str
        """
        return self._user_org_id

    @user_org_id.setter
    def user_org_id(self, user_org_id: str):
        """Sets the user_org_id of this OrgUserInvite.

        The id of the user within the organization  # noqa: E501

        :param user_org_id: The user_org_id of this OrgUserInvite.
        :type user_org_id: str
        """

        self._user_org_id = user_org_id
