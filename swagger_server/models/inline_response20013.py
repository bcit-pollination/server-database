# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.election import Election  # noqa: F401,E501
from swagger_server.models.location import Location  # noqa: F401,E501
from swagger_server.models.rpi import Rpi  # noqa: F401,E501
from swagger_server.models.user import User  # noqa: F401,E501
from swagger_server.models.verifier import Verifier  # noqa: F401,E501
from swagger_server import util


class InlineResponse20013(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, rpis: List[Rpi]=None, verifiers: List[Verifier]=None, voter_list: List[User]=None, locations: List[Location]=None, election_info: Election=None):  # noqa: E501
        """InlineResponse20013 - a model defined in Swagger

        :param rpis: The rpis of this InlineResponse20013.  # noqa: E501
        :type rpis: List[Rpi]
        :param verifiers: The verifiers of this InlineResponse20013.  # noqa: E501
        :type verifiers: List[Verifier]
        :param voter_list: The voter_list of this InlineResponse20013.  # noqa: E501
        :type voter_list: List[User]
        :param locations: The locations of this InlineResponse20013.  # noqa: E501
        :type locations: List[Location]
        :param election_info: The election_info of this InlineResponse20013.  # noqa: E501
        :type election_info: Election
        """
        self.swagger_types = {
            'rpis': List[Rpi],
            'verifiers': List[Verifier],
            'voter_list': List[User],
            'locations': List[Location],
            'election_info': Election
        }

        self.attribute_map = {
            'rpis': 'rpis',
            'verifiers': 'verifiers',
            'voter_list': 'voter_list',
            'locations': 'locations',
            'election_info': 'election_info'
        }
        self._rpis = rpis
        self._verifiers = verifiers
        self._voter_list = voter_list
        self._locations = locations
        self._election_info = election_info

    @classmethod
    def from_dict(cls, dikt) -> 'InlineResponse20013':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The inline_response_200_13 of this InlineResponse20013.  # noqa: E501
        :rtype: InlineResponse20013
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rpis(self) -> List[Rpi]:
        """Gets the rpis of this InlineResponse20013.

        The list of voting machines  # noqa: E501

        :return: The rpis of this InlineResponse20013.
        :rtype: List[Rpi]
        """
        return self._rpis

    @rpis.setter
    def rpis(self, rpis: List[Rpi]):
        """Sets the rpis of this InlineResponse20013.

        The list of voting machines  # noqa: E501

        :param rpis: The rpis of this InlineResponse20013.
        :type rpis: List[Rpi]
        """

        self._rpis = rpis

    @property
    def verifiers(self) -> List[Verifier]:
        """Gets the verifiers of this InlineResponse20013.

        OPTIONAL. The list of approved id verifiers. This will be present if the election is verified   # noqa: E501

        :return: The verifiers of this InlineResponse20013.
        :rtype: List[Verifier]
        """
        return self._verifiers

    @verifiers.setter
    def verifiers(self, verifiers: List[Verifier]):
        """Sets the verifiers of this InlineResponse20013.

        OPTIONAL. The list of approved id verifiers. This will be present if the election is verified   # noqa: E501

        :param verifiers: The verifiers of this InlineResponse20013.
        :type verifiers: List[Verifier]
        """

        self._verifiers = verifiers

    @property
    def voter_list(self) -> List[User]:
        """Gets the voter_list of this InlineResponse20013.

        The complete voter list. includes:: - First name - Last name - Organization id(if verified election) - voting_token   # noqa: E501

        :return: The voter_list of this InlineResponse20013.
        :rtype: List[User]
        """
        return self._voter_list

    @voter_list.setter
    def voter_list(self, voter_list: List[User]):
        """Sets the voter_list of this InlineResponse20013.

        The complete voter list. includes:: - First name - Last name - Organization id(if verified election) - voting_token   # noqa: E501

        :param voter_list: The voter_list of this InlineResponse20013.
        :type voter_list: List[User]
        """

        self._voter_list = voter_list

    @property
    def locations(self) -> List[Location]:
        """Gets the locations of this InlineResponse20013.

        The complete list of voting locations  # noqa: E501

        :return: The locations of this InlineResponse20013.
        :rtype: List[Location]
        """
        return self._locations

    @locations.setter
    def locations(self, locations: List[Location]):
        """Sets the locations of this InlineResponse20013.

        The complete list of voting locations  # noqa: E501

        :param locations: The locations of this InlineResponse20013.
        :type locations: List[Location]
        """

        self._locations = locations

    @property
    def election_info(self) -> Election:
        """Gets the election_info of this InlineResponse20013.


        :return: The election_info of this InlineResponse20013.
        :rtype: Election
        """
        return self._election_info

    @election_info.setter
    def election_info(self, election_info: Election):
        """Sets the election_info of this InlineResponse20013.


        :param election_info: The election_info of this InlineResponse20013.
        :type election_info: Election
        """

        self._election_info = election_info
