openapi: 3.0.2
info:
  title: Pollination Web Server
  version: "1.0"
servers:
- url: https://pollination.live
security:
- jwt: []
tags:
- name: user.auth
  description: Related to the authentication/authorization of users
- name: user
  description: A user can be a voter, and an admin or a verifier
- name: org
  description: An org aggregates users who can vote, administrate, or verify elections
- name: org.users
  description: Related to the users of an org
- name: org.rpis
  description: Related to the RPIs of an org. RPI stands for Raspberry Pi
- name: org.locations
  description: Related to the management of election locations
- name: org.verifiers
  description: Related to the management of id verifiers
- name: org.elections
  description: Related to the management of org elections
- name: org.election.results
  description: Related to the access and publishing of election results
- name: org.election.votes
  description: Related to the uploading and updating of votes
- name: org.election.download
  description: Download voting machine election package
- name: elections.results.public
  description: Provide API for the general public to access election results
paths:
  /api/user/login:
    post:
      tags:
      - user.auth
      summary: Login user
      operationId: login
      requestBody:
        $ref: '#/components/requestBodies/login'
      responses:
        "200":
          description: A token used to authenticate requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
      x-openapi-router-controller: swagger_server.controllers.user_auth_controller
  /api/user/logout:
    post:
      tags:
      - user.auth
      summary: Login user
      operationId: logout
      responses:
        "200":
          description: User loged out
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
      x-openapi-router-controller: swagger_server.controllers.user_auth_controller
  /api/user:
    get:
      tags:
      - user
      summary: Get user info
      operationId: get_user
      responses:
        "200":
          description: Contains the user id, info, enrolled orgs, privileges, upcoming
            elections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: Invalid syntax
        "401":
          description: Unauthorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
    put:
      tags:
      - user
      summary: Update user info
      operationId: update_user
      requestBody:
        $ref: '#/components/requestBodies/user'
      responses:
        "200":
          description: user updated
        "400":
          description: Invalid syntax
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
    post:
      tags:
      - user
      summary: Create user
      operationId: app_create_user
      requestBody:
        $ref: '#/components/requestBodies/new_user'
      responses:
        "200":
          description: A token used to authenticate requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: Invalid syntax
        "409":
          description: Account already exists
      security: []
      x-openapi-router-controller: swagger_server.controllers.user_controller
    delete:
      tags:
      - user
      summary: Remove user from service. Only a user can remove himself, hence the
        user is infered from the JWT
      operationId: remove_user
      responses:
        "200":
          description: User deleted
        "400":
          description: Invalid syntax
        "401":
          description: Unauthorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.user_controller
  /api/org/get/list:
    post:
      tags:
      - org
      summary: Get org info
      operationId: get_org_list
      responses:
        "200":
          description: Contains all the information relating to the user of the org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Invalid syntax
        "401":
          description: Unauthorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_controller
  /api/org/get:
    post:
      tags:
      - org
      summary: Get org info
      operationId: get_org
      requestBody:
        $ref: '#/components/requestBodies/get_org'
      responses:
        "200":
          description: Contains all the information relating to the user of the org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: Invalid syntax
        "401":
          description: Unauthorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_controller
  /api/org:
    put:
      tags:
      - org
      summary: Update org info
      operationId: update_org
      requestBody:
        $ref: '#/components/requestBodies/org'
      responses:
        "200":
          description: Org updated
        "400":
          description: Invalid syntax
        "401":
          description: Unauthorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_controller
    post:
      tags:
      - org
      summary: Create org
      operationId: create_org
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          description: Org created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: Invalid syntax
        "401":
          description: Unauthorized
      x-openapi-router-controller: swagger_server.controllers.org_controller
    delete:
      tags:
      - org
      summary: Disband org
      description: An org can only be disbanded by it's owner, hence the org is infered
        from the JWT
      operationId: disband_org
      responses:
        "200":
          description: OK
        "400":
          description: Invalid syntax
        "401":
          description: Unauthorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_controller
  /api/org/users/get/list:
    post:
      tags:
      - org.users
      summary: Fetch org users
      description: Get all users
      operationId: get_org_users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_1'
      responses:
        "200":
          description: A list of all users in the org, together with lists of admin,
            verifier id's
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "400":
          description: Invalid syntax
        "401":
          description: Unauthorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_users_controller
  /api/org/users/invite:
    post:
      tags:
      - org.users
      summary: Add user to org
      description: Use this to invite user to org
      operationId: org_invite_user
      requestBody:
        $ref: '#/components/requestBodies/org_user_invite'
      responses:
        "200":
          description: User added
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_users_controller
  /api/org/users/invite/accept:
    get:
      tags:
      - org.users
      summary: Accept invitation user to org
      description: Use this to invite user to org
      operationId: accept_org_invite
      parameters:
      - name: encrypted_data
        in: query
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: User added
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_users_controller
  /api/org/users/delete:
    post:
      tags:
      - org.users
      summary: Kick user from org
      operationId: kick_org_user
      requestBody:
        $ref: '#/components/requestBodies/org_user'
      responses:
        "200":
          description: User kicked
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_users_controller
  /api/org/users/privileges:
    put:
      tags:
      - org.users
      summary: Change user privileges
      description: |
        'user privileges are:<br> - 0 := invited<br> - 1 := member<br> - 2 := verifier<br> - 3 := admin<br> - 4 := owner'
      operationId: change_user_privilege
      requestBody:
        $ref: '#/components/requestBodies/change_user_privileges'
      responses:
        "200":
          description: Privileges changed
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_users_controller
  /api/org/rpis/get/list:
    get:
      tags:
      - org.rpis
      summary: Get the voting machines belonging to this organization
      operationId: get_rpis
      parameters:
      - name: org_id
        in: query
        description: The id of the org the rpis belong to
        required: true
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: A list of all the rpis belonging to this org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_rpis_controller
  /api/org/rpis:
    put:
      tags:
      - org.rpis
      summary: Assign voting machine
      operationId: assign_rpi
      requestBody:
        $ref: '#/components/requestBodies/assign_rpi'
      responses:
        "200":
          description: RPI assigned
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_rpis_controller
    post:
      tags:
      - org.rpis
      summary: Add voting machine
      description: "New RPIs are assigned location 0. \n location of 0 can be interpreted\
        \ as no location assigned\n"
      operationId: add_rpi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_2'
        required: true
      responses:
        "200":
          description: RPI added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_rpis_controller
  /api/org/rpis/delete:
    post:
      tags:
      - org.rpis
      summary: Discard RPI
      operationId: discard_rpi
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_3'
      responses:
        "200":
          description: rpi deleted
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_rpis_controller
  /api/org/locations/get/list:
    post:
      tags:
      - org.locations
      summary: Get all the org voting locations
      description: In principle this information should be available to the public
      operationId: get_locations_list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_4'
      responses:
        "200":
          description: A list of all the locations for a given election
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_locations_controller
  /api/org/locations:
    put:
      tags:
      - org.locations
      summary: Update location
      operationId: update_location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_5'
      responses:
        "200":
          description: Location added
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_locations_controller
    post:
      tags:
      - org.locations
      summary: Add location
      operationId: add_location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_6'
      responses:
        "200":
          description: Location added
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_locations_controller
  /api/org/locations/delete:
    post:
      tags:
      - org.locations
      summary: Delete location
      operationId: delete_location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_7'
      responses:
        "200":
          description: Location deleted
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_locations_controller
  /api/org/verifiers/list:
    post:
      tags:
      - org.verifiers
      summary: Get all the verifiers for a given election
      operationId: get_org_verifiers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_8'
      responses:
        "200":
          description: All the id verifiers for a given org
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_verifiers_controller
  /api/org/verifiers:
    put:
      tags:
      - org.verifiers
      summary: Assign verifier to location
      operationId: assign_verifier
      requestBody:
        $ref: '#/components/requestBodies/assign_verifier'
      responses:
        "200":
          description: Assigned
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_verifiers_controller
  /api/org/elections/get/list:
    post:
      tags:
      - org.elections
      summary: Get election info list
      description: Get list of elections for a given org
      operationId: get_election_list
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_9'
      responses:
        "200":
          description: Get a list of elections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_elections_controller
  /api/org/elections/get:
    post:
      tags:
      - org.elections
      summary: Get election info
      description: Get one election
      operationId: get_election
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_10'
      responses:
        "200":
          description: Info about election
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_elections_controller
  /api/org/elections:
    put:
      tags:
      - org.elections
      summary: update election
      description: "Update election. \nElections can only be updated before they have\
        \ commenced.\n"
      operationId: update_election
      requestBody:
        $ref: '#/components/requestBodies/election'
      responses:
        "200":
          description: Election created
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_elections_controller
    post:
      tags:
      - org.elections
      summary: Create election
      description: Create election
      operationId: create_election
      requestBody:
        $ref: '#/components/requestBodies/election'
      responses:
        "200":
          description: Election updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_elections_controller
  /api/org/elections/delete:
    post:
      tags:
      - org.elections
      summary: Delete election
      description: |
        Elections can only be deleted before they have commenced.
      operationId: delete_election
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body_11'
      responses:
        "200":
          description: Election deleted
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_elections_controller
  /api/org/elections/public/get/list:
    get:
      tags:
      - elections.results.public
      summary: Get public elections
      description: |
        Get a list of elections with results open to the public
      operationId: get_public_election_result_list
      parameters:
      - name: page
        in: query
        description: The page to get
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: elections_per_page
        in: query
        description: The page to get
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: version
        in: query
        description: Optional, the voting result version. Leave empty for latest
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: A list of election results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      security: []
      x-openapi-router-controller: swagger_server.controllers.elections_results_public_controller
  /api/org/elections/public/get:
    get:
      tags:
      - elections.results.public
      summary: Get public elections
      description: |
        Get a list of elections with results open to the public
      operationId: get_public_election_result
      parameters:
      - name: election_id
        in: query
        description: The id of the election to get
        required: true
        style: form
        explode: true
        schema:
          type: integer
      - name: version
        in: query
        description: Optional, the voting result version. Leave empty for latest
        required: false
        style: form
        explode: true
        schema:
          type: integer
      responses:
        "200":
          description: The result of an election
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/election_results'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      security: []
      x-openapi-router-controller: swagger_server.controllers.elections_results_public_controller
  /api/org/elections/results:
    post:
      tags:
      - org.election.results
      summary: Get election voting results
      description: "Get the voting results for an election.\nIf the election is private,\
        \ and the user is not a member  of the org, then will respond 401: Unauthorized\n\
        If there are several results for the same election, the latest version will\
        \ be \n"
      operationId: get_election_results
      requestBody:
        $ref: '#/components/requestBodies/get_election_results'
      responses:
        "200":
          description: The result of an election
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/election_results'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_election_results_controller
  /api/org/election/votes:
    post:
      tags:
      - org.election.votes
      summary: Create/Update election results
      description: |
        Create/Update election results.
        Each call will add a new versioned entry for security purposes.
      operationId: upload_election_votes
      requestBody:
        $ref: '#/components/requestBodies/post_votes'
      responses:
        "200":
          description: Results added
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_election_votes_controller
  /api/org/election/download:
    post:
      tags:
      - org.election.download
      summary: Download main RPI election package
      description: |
        Gives the necessary information for a completely standalone voting process.
        The information included is:
          - Complete voter list, including their respective identification within the org and voting token
          - Ballot, including the election details and questions
          - List of locations
          - List of voting machines, each associated to a location
          - OPTIONAL. Approved verifier list, each associated to a location.
            This property will only be present if the election is verified
      operationId: download_voting_package
      requestBody:
        $ref: '#/components/requestBodies/get_election_voting_package'
      responses:
        "200":
          description: All of the information needed to run an offline election using
            the Pollination voting machines
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_13'
        "400":
          description: Invalid syntax
        "401":
          description: Not Authorized
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.org_election_download_controller
components:
  schemas:
    location:
      type: object
      properties:
        id:
          type: integer
        streetAddress:
          type: string
          description: building number followed by street name
        city:
          type: string
        postal_code:
          type: string
        province:
          type: string
        country:
          type: string
      additionalProperties: false
      description: A voting location. Multiple stations can be assigned to one location
      example:
        country: country
        province: province
        streetAddress: streetAddress
        city: city
        id: 1
        postal_code: postal_code
    rpi:
      type: object
      properties:
        rpi_id:
          type: integer
        org_id:
          type: integer
          description: Id of the owner org
        location:
          $ref: '#/components/schemas/location'
      additionalProperties: false
      description: A voting machine
      example:
        org_id: 6
        location:
          country: country
          province: province
          streetAddress: streetAddress
          city: city
          id: 1
          postal_code: postal_code
        rpi_id: 0
    user:
      type: object
      properties:
        id:
          type: integer
          format: int64
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        voting_token:
          type: string
          description: Token to be passed to the RPI at the time of voting
      additionalProperties: false
      description: A user. user can be voters, and admins or verifiers
      example:
        password: password
        last_name: last_name
        id: 0
        voting_token: voting_token
        first_name: first_name
        email: email
    verifier:
      type: object
      properties:
        user_info:
          $ref: '#/components/schemas/user'
        location_id:
          type: integer
          description: The id of the location this verifier is assigned to
      additionalProperties: false
      description: An ID verifier
      example:
        user_info:
          password: password
          last_name: last_name
          id: 0
          voting_token: voting_token
          first_name: first_name
          email: email
        location_id: 0
    org:
      type: object
      properties:
        id:
          type: integer
          description: A unique identifier
          format: int64
        name:
          type: string
          description: The name of the org
      additionalProperties: false
      description: An organization
      example:
        name: name
        id: 6
    org_user_invite:
      type: object
      properties:
        email:
          type: string
          format: email
        user_org_id:
          type: string
          description: The id of the user within the organization
      description: The info needed to invite a user
    election:
      type: object
      properties:
        election_id:
          type: integer
        org_id:
          type: integer
          description: The id of the organization holding the election
        start_time:
          pattern: YYYY-MM-DDTHH-mm-ss
          type: string
          description: The time and date that an election will be open for polling
          format: date-time
        end_time:
          pattern: YYYY-MM-DDTHH-mm-ss
          type: string
          description: The time and date that an election will be closed for polling
          format: date-time
        status:
          type: integer
          description: |
            The status of the election:<br> - 0 := Draft<br> - 1 := Called<br> - 2 := Active<br> - 3 := Closed<br> - 4 := Published
        anonymous:
          type: boolean
          description: Whether this election is anonymous. True for anonymous, else
            non-anonymous
        verified:
          type: boolean
          description: Whether it is required for voters to verify their ID's in order
            to vote
        public_results:
          type: boolean
          description: Whether the results of the election are open to the general
            public, or just within the org
        ballot:
          $ref: '#/components/schemas/ballot'
      additionalProperties: false
      description: |
        Models an election.
        The election has voter list, id verifiers, voting stations, and locations associated with it.
        Elections can be anonymous or non-anonymous
        The election has a predetermined window of time during which it is active.  Before the active window begins, the election can be edited.  However, it cannot be edited once it has begun.

        Times must be provided in UTC.
      example:
        ballot:
          questions:
          - question_type: 5
            election_id: 5
            options:
            - option_text: option_text
              option_id: 2
            - option_text: option_text
              option_id: 2
          - question_type: 5
            election_id: 5
            options:
            - option_text: option_text
              option_id: 2
            - option_text: option_text
              option_id: 2
        start_time: 2000-01-23T04:56:07.000+00:00
        org_id: 6
        election_id: 0
        end_time: 2000-01-23T04:56:07.000+00:00
        verified: true
        public_results: true
        anonymous: true
        status: 1
    user_org:
      type: object
      properties:
        privilege:
          type: integer
          description: The privilege level within the org
        org:
          $ref: '#/components/schemas/org'
      description: An org the user belongs to
      example:
        org:
          name: name
          id: 6
        privilege: 0
    option:
      type: object
      properties:
        option_id:
          type: integer
        option_text:
          type: string
          description: The text describing a posible selection to be made
      description: An option given for a question
      example:
        option_text: option_text
        option_id: 2
    question:
      type: object
      properties:
        election_id:
          type: integer
          description: The id of the parent election
        question_type:
          type: integer
          description: |
            Whether the question is: - 0 := multiple choice - 1 := single answer - 2 := yes or no
        options:
          type: array
          description: The options given
          items:
            $ref: '#/components/schemas/option'
      description: An election question
      example:
        question_type: 5
        election_id: 5
        options:
        - option_text: option_text
          option_id: 2
        - option_text: option_text
          option_id: 2
    ballot:
      type: object
      properties:
        questions:
          type: array
          items:
            $ref: '#/components/schemas/question'
      description: The compilation of question presented in an election
      example:
        questions:
        - question_type: 5
          election_id: 5
          options:
          - option_text: option_text
            option_id: 2
          - option_text: option_text
            option_id: 2
        - question_type: 5
          election_id: 5
          options:
          - option_text: option_text
            option_id: 2
          - option_text: option_text
            option_id: 2
    choice:
      type: object
      properties:
        question_id:
          type: integer
          description: The id of the question
        option_id:
          type: integer
          description: The id of the option chosen by the user
      description: A vote choice
      example:
        option_id: 5
        question_id: 1
    vote:
      type: object
      properties:
        voter_first_name:
          type: string
          description: OPTIONAL. The first name of the voter
        voter_last_name:
          type: string
          description: OPTIONAL. The last name of the voter
        voting_token:
          type: string
          description: The token used by a user to cast the vote
        choices:
          type: array
          description: The choices made by the voter
          items:
            $ref: '#/components/schemas/choice'
        time_stamp:
          pattern: YYYY-MM-DDTHH-mm-ss
          type: string
          description: The time at which the vote was cast
          format: date-time
        location_id:
          type: integer
          description: The id of the location where the vote was cast
      description: |
        A vote cast.
        If the election is anonymous, first_name and last_name will be null. Else, they are required.
      example:
        voter_first_name: voter_first_name
        time_stamp: 2000-01-23T04:56:07.000+00:00
        voter_last_name: voter_last_name
        voting_token: voting_token
        choices:
        - option_id: 5
          question_id: 1
        - option_id: 5
          question_id: 1
        location_id: 5
    option_results:
      type: object
      properties:
        option:
          $ref: '#/components/schemas/option'
        total_votes_for:
          type: integer
          description: The total number of votes cast for this option
        vote_proportion_percent:
          type: integer
          description: The voting proportion for this option, in percents
      description: The voting result for this option
      example:
        total_votes_for: 0
        vote_proportion_percent: 6
        option:
          option_text: option_text
          option_id: 2
    question_results:
      type: object
      properties:
        options_posed:
          type: array
          description: The options given for this question
          items:
            $ref: '#/components/schemas/option_results'
      description: The voting results for this question
      example:
        options_posed:
        - total_votes_for: 0
          vote_proportion_percent: 6
          option:
            option_text: option_text
            option_id: 2
        - total_votes_for: 0
          vote_proportion_percent: 6
          option:
            option_text: option_text
            option_id: 2
    election_results:
      type: object
      properties:
        organization:
          $ref: '#/components/schemas/org'
        election_info:
          $ref: '#/components/schemas/election'
        election_description:
          type: string
          description: A brief description of the election
        question_results:
          type: array
          description: The results for each question posed
          items:
            $ref: '#/components/schemas/question_results'
        user_votes:
          type: array
          description: The votes cast. Optional and dependant on whether the election
            was anonymous
          items:
            $ref: '#/components/schemas/vote'
      description: "The results of an election. \nOrganization property is optional\
        \ is provided for public requests purposes\n"
      example:
        question_results:
        - options_posed:
          - total_votes_for: 0
            vote_proportion_percent: 6
            option:
              option_text: option_text
              option_id: 2
          - total_votes_for: 0
            vote_proportion_percent: 6
            option:
              option_text: option_text
              option_id: 2
        - options_posed:
          - total_votes_for: 0
            vote_proportion_percent: 6
            option:
              option_text: option_text
              option_id: 2
          - total_votes_for: 0
            vote_proportion_percent: 6
            option:
              option_text: option_text
              option_id: 2
        election_info:
          ballot:
            questions:
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
          start_time: 2000-01-23T04:56:07.000+00:00
          org_id: 6
          election_id: 0
          end_time: 2000-01-23T04:56:07.000+00:00
          verified: true
          public_results: true
          anonymous: true
          status: 1
        organization:
          name: name
          id: 6
        election_description: election_description
        user_votes:
        - voter_first_name: voter_first_name
          time_stamp: 2000-01-23T04:56:07.000+00:00
          voter_last_name: voter_last_name
          voting_token: voting_token
          choices:
          - option_id: 5
            question_id: 1
          - option_id: 5
            question_id: 1
          location_id: 5
        - voter_first_name: voter_first_name
          time_stamp: 2000-01-23T04:56:07.000+00:00
          voter_last_name: voter_last_name
          voting_token: voting_token
          choices:
          - option_id: 5
            question_id: 1
          - option_id: 5
            question_id: 1
          location_id: 5
    inline_response_200:
      type: object
      properties:
        jwt_token:
          type: string
          description: Authentication token for new user
      additionalProperties: false
      example:
        jwt_token: jwt_token
    inline_response_200_1:
      type: object
      properties:
        user_info:
          $ref: '#/components/schemas/user'
      additionalProperties: false
      example:
        user_info:
          password: password
          last_name: last_name
          id: 0
          voting_token: voting_token
          first_name: first_name
          email: email
    inline_response_200_2:
      type: object
      properties:
        org:
          $ref: '#/components/schemas/user_org'
      additionalProperties: false
      example:
        org:
          org:
            name: name
            id: 6
          privilege: 0
    body:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: The name of the org being created
        org_uid:
          type: string
          description: The id of the user within
      additionalProperties: false
    inline_response_200_3:
      type: object
      properties:
        org_id:
          type: integer
          description: The id of the implied org
      additionalProperties: false
      example:
        org_id: 0
    body_1:
      type: object
      properties:
        org_id:
          type: integer
          description: The id of the implied org
      additionalProperties: false
    inline_response_200_4:
      type: object
      properties:
        users:
          type: array
          description: An array of all users subscribed to vote
          items:
            $ref: '#/components/schemas/user'
        verifiers:
          type: array
          description: An array of uids for org verifiers
          items:
            type: integer
        admins:
          type: array
          description: An array of uids for org admins
          items:
            type: integer
      additionalProperties: false
      example:
        users:
        - password: password
          last_name: last_name
          id: 0
          voting_token: voting_token
          first_name: first_name
          email: email
        - password: password
          last_name: last_name
          id: 0
          voting_token: voting_token
          first_name: first_name
          email: email
        verifiers:
        - 0
        - 0
        admins:
        - 6
        - 6
    inline_response_200_5:
      type: object
      properties:
        rpis:
          type: array
          items:
            $ref: '#/components/schemas/rpi'
      additionalProperties: false
      example:
        rpis:
        - org_id: 6
          location:
            country: country
            province: province
            streetAddress: streetAddress
            city: city
            id: 1
            postal_code: postal_code
          rpi_id: 0
        - org_id: 6
          location:
            country: country
            province: province
            streetAddress: streetAddress
            city: city
            id: 1
            postal_code: postal_code
          rpi_id: 0
    body_2:
      required:
      - org_id
      type: object
      properties:
        org_id:
          type: integer
          description: The id of the org to add the rpi to
      additionalProperties: false
    inline_response_200_6:
      type: object
      properties:
        rpi_id:
          type: integer
          description: The id of the RPI just added
      additionalProperties: false
      example:
        rpi_id: 0
    body_3:
      type: object
      properties:
        rpi_id:
          type: integer
          description: The id of the org the RPI belongs to
      additionalProperties: false
    body_4:
      type: object
      properties:
        org_id:
          type: integer
          description: The id of the org the RPI belongs to
      additionalProperties: false
    inline_response_200_7:
      type: object
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/location'
      additionalProperties: false
      example:
        locations:
        - country: country
          province: province
          streetAddress: streetAddress
          city: city
          id: 1
          postal_code: postal_code
        - country: country
          province: province
          streetAddress: streetAddress
          city: city
          id: 1
          postal_code: postal_code
    body_5:
      properties:
        org_id:
          type: integer
          description: The id of the org to add the location to
        location:
          $ref: '#/components/schemas/location'
    body_6:
      properties:
        org_id:
          type: integer
          description: The id of the org to add the location to
        location:
          $ref: '#/components/schemas/location'
    body_7:
      properties:
        location_id:
          type: integer
          description: The id of the location to delete
    body_8:
      properties:
        org_id:
          type: integer
          description: The id of the org to get verifiers for
    inline_response_200_8:
      type: object
      properties:
        verifiers:
          type: array
          items:
            $ref: '#/components/schemas/user'
      additionalProperties: false
      example:
        verifiers:
        - password: password
          last_name: last_name
          id: 0
          voting_token: voting_token
          first_name: first_name
          email: email
        - password: password
          last_name: last_name
          id: 0
          voting_token: voting_token
          first_name: first_name
          email: email
    body_9:
      properties:
        org_id:
          type: integer
          description: The id of the org to get the election for
    inline_response_200_9:
      type: object
      properties:
        elections:
          type: array
          items:
            $ref: '#/components/schemas/election'
      additionalProperties: false
      example:
        elections:
        - ballot:
            questions:
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
          start_time: 2000-01-23T04:56:07.000+00:00
          org_id: 6
          election_id: 0
          end_time: 2000-01-23T04:56:07.000+00:00
          verified: true
          public_results: true
          anonymous: true
          status: 1
        - ballot:
            questions:
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
          start_time: 2000-01-23T04:56:07.000+00:00
          org_id: 6
          election_id: 0
          end_time: 2000-01-23T04:56:07.000+00:00
          verified: true
          public_results: true
          anonymous: true
          status: 1
    body_10:
      properties:
        org_id:
          type: integer
          description: The id of the org to get the election for
        election_id:
          type: integer
          description: The id of the election to get
    inline_response_200_10:
      type: object
      properties:
        election:
          $ref: '#/components/schemas/election'
      additionalProperties: false
      example:
        election:
          ballot:
            questions:
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
          start_time: 2000-01-23T04:56:07.000+00:00
          org_id: 6
          election_id: 0
          end_time: 2000-01-23T04:56:07.000+00:00
          verified: true
          public_results: true
          anonymous: true
          status: 1
    inline_response_200_11:
      type: object
      properties:
        election_id:
          type: integer
          description: The id of the election just created
      additionalProperties: false
      example:
        election_id: 0
    body_11:
      type: object
      properties:
        election_id:
          type: integer
          description: The id of the election to delete
      additionalProperties: false
    inline_response_200_12:
      type: object
      properties:
        elections:
          type: array
          items:
            $ref: '#/components/schemas/election_results'
      additionalProperties: false
      example:
        elections:
        - question_results:
          - options_posed:
            - total_votes_for: 0
              vote_proportion_percent: 6
              option:
                option_text: option_text
                option_id: 2
            - total_votes_for: 0
              vote_proportion_percent: 6
              option:
                option_text: option_text
                option_id: 2
          - options_posed:
            - total_votes_for: 0
              vote_proportion_percent: 6
              option:
                option_text: option_text
                option_id: 2
            - total_votes_for: 0
              vote_proportion_percent: 6
              option:
                option_text: option_text
                option_id: 2
          election_info:
            ballot:
              questions:
              - question_type: 5
                election_id: 5
                options:
                - option_text: option_text
                  option_id: 2
                - option_text: option_text
                  option_id: 2
              - question_type: 5
                election_id: 5
                options:
                - option_text: option_text
                  option_id: 2
                - option_text: option_text
                  option_id: 2
            start_time: 2000-01-23T04:56:07.000+00:00
            org_id: 6
            election_id: 0
            end_time: 2000-01-23T04:56:07.000+00:00
            verified: true
            public_results: true
            anonymous: true
            status: 1
          organization:
            name: name
            id: 6
          election_description: election_description
          user_votes:
          - voter_first_name: voter_first_name
            time_stamp: 2000-01-23T04:56:07.000+00:00
            voter_last_name: voter_last_name
            voting_token: voting_token
            choices:
            - option_id: 5
              question_id: 1
            - option_id: 5
              question_id: 1
            location_id: 5
          - voter_first_name: voter_first_name
            time_stamp: 2000-01-23T04:56:07.000+00:00
            voter_last_name: voter_last_name
            voting_token: voting_token
            choices:
            - option_id: 5
              question_id: 1
            - option_id: 5
              question_id: 1
            location_id: 5
        - question_results:
          - options_posed:
            - total_votes_for: 0
              vote_proportion_percent: 6
              option:
                option_text: option_text
                option_id: 2
            - total_votes_for: 0
              vote_proportion_percent: 6
              option:
                option_text: option_text
                option_id: 2
          - options_posed:
            - total_votes_for: 0
              vote_proportion_percent: 6
              option:
                option_text: option_text
                option_id: 2
            - total_votes_for: 0
              vote_proportion_percent: 6
              option:
                option_text: option_text
                option_id: 2
          election_info:
            ballot:
              questions:
              - question_type: 5
                election_id: 5
                options:
                - option_text: option_text
                  option_id: 2
                - option_text: option_text
                  option_id: 2
              - question_type: 5
                election_id: 5
                options:
                - option_text: option_text
                  option_id: 2
                - option_text: option_text
                  option_id: 2
            start_time: 2000-01-23T04:56:07.000+00:00
            org_id: 6
            election_id: 0
            end_time: 2000-01-23T04:56:07.000+00:00
            verified: true
            public_results: true
            anonymous: true
            status: 1
          organization:
            name: name
            id: 6
          election_description: election_description
          user_votes:
          - voter_first_name: voter_first_name
            time_stamp: 2000-01-23T04:56:07.000+00:00
            voter_last_name: voter_last_name
            voting_token: voting_token
            choices:
            - option_id: 5
              question_id: 1
            - option_id: 5
              question_id: 1
            location_id: 5
          - voter_first_name: voter_first_name
            time_stamp: 2000-01-23T04:56:07.000+00:00
            voter_last_name: voter_last_name
            voting_token: voting_token
            choices:
            - option_id: 5
              question_id: 1
            - option_id: 5
              question_id: 1
            location_id: 5
    inline_response_200_13:
      type: object
      properties:
        rpis:
          type: array
          description: The list of voting machines
          items:
            $ref: '#/components/schemas/rpi'
        verifiers:
          type: array
          description: |
            OPTIONAL. The list of approved id verifiers.
            This will be present if the election is verified
          items:
            $ref: '#/components/schemas/verifier'
        voter_list:
          type: array
          description: |
            The complete voter list. includes::
            - First name - Last name - Organization id(if verified election) - voting_token
          items:
            $ref: '#/components/schemas/user'
        locations:
          type: array
          description: The complete list of voting locations
          items:
            $ref: '#/components/schemas/location'
        election_info:
          $ref: '#/components/schemas/election'
      additionalProperties: false
      example:
        election_info:
          ballot:
            questions:
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
            - question_type: 5
              election_id: 5
              options:
              - option_text: option_text
                option_id: 2
              - option_text: option_text
                option_id: 2
          start_time: 2000-01-23T04:56:07.000+00:00
          org_id: 6
          election_id: 0
          end_time: 2000-01-23T04:56:07.000+00:00
          verified: true
          public_results: true
          anonymous: true
          status: 1
        locations:
        - country: country
          province: province
          streetAddress: streetAddress
          city: city
          id: 1
          postal_code: postal_code
        - country: country
          province: province
          streetAddress: streetAddress
          city: city
          id: 1
          postal_code: postal_code
        voter_list:
        - null
        - null
        rpis:
        - org_id: 6
          location:
            country: country
            province: province
            streetAddress: streetAddress
            city: city
            id: 1
            postal_code: postal_code
          rpi_id: 0
        - org_id: 6
          location:
            country: country
            province: province
            streetAddress: streetAddress
            city: city
            id: 1
            postal_code: postal_code
          rpi_id: 0
        verifiers:
        - user_info:
            password: password
            last_name: last_name
            id: 0
            voting_token: voting_token
            first_name: first_name
            email: email
          location_id: 0
        - user_info:
            password: password
            last_name: last_name
            id: 0
            voting_token: voting_token
            first_name: first_name
            email: email
          location_id: 0
  responses:
    default:
      description: Unhandled error
    "400":
      description: Invalid syntax
    "401":
      description: Not Authorized
    "404":
      description: Not found
    jwt:
      description: A token used to authenticate requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200'
    user:
      description: Contains the user id, info, enrolled orgs, privileges, upcoming
        elections
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_1'
    org_list:
      description: Contains all the information relating to the user of the org
      content:
        application/json:
          schema:
            type: object
            properties:
              orgs:
                type: array
                description: A list of all the orgs the user belongs to
                items:
                  $ref: '#/components/schemas/user_org'
            additionalProperties: false
    org:
      description: Contains all the information relating to the user of the org
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_2'
    org_users:
      description: A list of all users in the org, together with lists of admin, verifier
        id's
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_4'
    org_rpis:
      description: A list of all the rpis belonging to this org
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_5'
    org_locations:
      description: A list of all the locations for a given election
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_7'
    election:
      description: Info about election
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_10'
    election_list:
      description: Get a list of elections
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_9'
    verifiers:
      description: All the id verifiers for a given org
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_8'
    election_results:
      description: The result of an election
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/election_results'
    election_result_list:
      description: A list of election results
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_12'
    election_package:
      description: All of the information needed to run an offline election using
        the Pollination voting machines
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_response_200_13'
  requestBodies:
    login:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            additionalProperties: false
    new_user:
      description: New user info to be added.
      content:
        application/json:
          schema:
            type: object
            properties:
              first_name:
                type: string
              last_name:
                type: string
              email:
                type: string
              password:
                type: string
            additionalProperties: false
    user:
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: integer
                description: Id of the user to be added
              org_id:
                type: string
                description: The ID of the user within the org
            additionalProperties: false
    org_user:
      content:
        application/json:
          schema:
            type: object
            properties:
              org_id:
                type: integer
                description: The id of the org to add the user to
              uid:
                type: integer
                description: The id of the user to add
            additionalProperties: false
    org_user_invite:
      description: A list of info for users to be invited
      content:
        application/json:
          schema:
            type: object
            properties:
              invites:
                type: array
                items:
                  $ref: '#/components/schemas/org_user_invite'
            additionalProperties: false
    get_org:
      content:
        application/json:
          schema:
            type: object
            properties:
              org_id:
                type: integer
                description: The id of the org to get
            additionalProperties: false
    org:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/org'
    kick_user:
      description: Information about user to be kicked
      content:
        application/json:
          schema:
            type: object
            properties:
              uid:
                type: integer
                description: user id of user to be kicked
              orgId:
                type: integer
                description: The id of the org in which to change the privileges
            additionalProperties: false
    change_user_privileges:
      description: Information about the user to have the privileges changed
      content:
        application/json:
          schema:
            type: object
            properties:
              uid:
                type: integer
                description: user id of the user to changed
              newPrivileges:
                type: integer
                description: the new privileges for the user
              orgId:
                type: integer
                description: The id of the org in which to change the privileges
            additionalProperties: false
    assign_rpi:
      description: data needed to associate rpi with a certain location
      content:
        application/json:
          schema:
            type: object
            properties:
              rpiId:
                type: integer
              locationId:
                type: integer
                description: The id of the location to assign the rpi to
            additionalProperties: false
    discard_rpi:
      content:
        application/json:
          schema:
            type: object
            properties:
              rpiId:
                type: integer
            additionalProperties: false
    discard_location:
      content:
        application/json:
          schema:
            type: object
            properties:
              locationId:
                type: integer
            additionalProperties: false
    assign_verifier:
      content:
        application/json:
          schema:
            type: object
            properties:
              locationId:
                type: integer
                description: The id of the location to assign the verifier
              uid:
                type: integer
                description: user id of the verifier to be assigned
            additionalProperties: false
    election:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/election'
    post_votes:
      content:
        application/json:
          schema:
            type: object
            properties:
              votes_cast:
                type: array
                items:
                  $ref: '#/components/schemas/vote'
            additionalProperties: false
    get_election_results:
      content:
        application/json:
          schema:
            type: object
            properties:
              election_id:
                type: integer
                description: The id of the election of interest
              election_version:
                type: integer
                description: |
                  The point in the timeline of the voting compilation that is of interest.
                  Leave 0 for latest
            additionalProperties: false
    get_election_voting_package:
      content:
        application/json:
          schema:
            type: object
            properties:
              election_id:
                type: integer
                description: The ID of the election for which to get the voting package
            additionalProperties: false
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_jwt

