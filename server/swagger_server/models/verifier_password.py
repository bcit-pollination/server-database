# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class VerifierPassword(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, verifier_password: str=None):  # noqa: E501
        """VerifierPassword - a model defined in Swagger

        :param verifier_password: The verifier_password of this VerifierPassword.  # noqa: E501
        :type verifier_password: str
        """
        self.swagger_types = {
            'verifier_password': str
        }

        self.attribute_map = {
            'verifier_password': 'verifier_password'
        }
        self._verifier_password = verifier_password

    @classmethod
    def from_dict(cls, dikt) -> 'VerifierPassword':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The verifier_password of this VerifierPassword.  # noqa: E501
        :rtype: VerifierPassword
        """
        return util.deserialize_model(dikt, cls)

    @property
    def verifier_password(self) -> str:
        """Gets the verifier_password of this VerifierPassword.


        :return: The verifier_password of this VerifierPassword.
        :rtype: str
        """
        return self._verifier_password

    @verifier_password.setter
    def verifier_password(self, verifier_password: str):
        """Sets the verifier_password of this VerifierPassword.


        :param verifier_password: The verifier_password of this VerifierPassword.
        :type verifier_password: str
        """
        if verifier_password is None:
            raise ValueError("Invalid value for `verifier_password`, must not be `None`")  # noqa: E501

        self._verifier_password = verifier_password
