# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Option(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, option_id: int=None, option_description: str=None):  # noqa: E501
        """Option - a model defined in Swagger

        :param option_id: The option_id of this Option.  # noqa: E501
        :type option_id: int
        :param option_description: The option_description of this Option.  # noqa: E501
        :type option_description: str
        """
        self.swagger_types = {
            'option_id': int,
            'option_description': str
        }

        self.attribute_map = {
            'option_id': 'option_id',
            'option_description': 'option_description'
        }
        self._option_id = option_id
        self._option_description = option_description

    @classmethod
    def from_dict(cls, dikt) -> 'Option':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The option of this Option.  # noqa: E501
        :rtype: Option
        """
        return util.deserialize_model(dikt, cls)

    @property
    def option_id(self) -> int:
        """Gets the option_id of this Option.


        :return: The option_id of this Option.
        :rtype: int
        """
        return self._option_id

    @option_id.setter
    def option_id(self, option_id: int):
        """Sets the option_id of this Option.


        :param option_id: The option_id of this Option.
        :type option_id: int
        """

        self._option_id = option_id

    @property
    def option_description(self) -> str:
        """Gets the option_description of this Option.

        The text describing a posible selection to be made  # noqa: E501

        :return: The option_description of this Option.
        :rtype: str
        """
        return self._option_description

    @option_description.setter
    def option_description(self, option_description: str):
        """Sets the option_description of this Option.

        The text describing a posible selection to be made  # noqa: E501

        :param option_description: The option_description of this Option.
        :type option_description: str
        """
        if option_description is None:
            raise ValueError("Invalid value for `option_description`, must not be `None`")  # noqa: E501

        self._option_description = option_description
