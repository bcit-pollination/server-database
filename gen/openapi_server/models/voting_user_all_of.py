# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class VotingUserAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_org_id=None):  # noqa: E501
        """VotingUserAllOf - a model defined in OpenAPI

        :param user_org_id: The user_org_id of this VotingUserAllOf.  # noqa: E501
        :type user_org_id: str
        """
        self.openapi_types = {
            'user_org_id': str
        }

        self.attribute_map = {
            'user_org_id': 'user_org_id'
        }

        self._user_org_id = user_org_id

    @classmethod
    def from_dict(cls, dikt) -> 'VotingUserAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The voting_user_allOf of this VotingUserAllOf.  # noqa: E501
        :rtype: VotingUserAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_org_id(self):
        """Gets the user_org_id of this VotingUserAllOf.

        The ID of the user within the organization (School id, Driver License, etc...)  # noqa: E501

        :return: The user_org_id of this VotingUserAllOf.
        :rtype: str
        """
        return self._user_org_id

    @user_org_id.setter
    def user_org_id(self, user_org_id):
        """Sets the user_org_id of this VotingUserAllOf.

        The ID of the user within the organization (School id, Driver License, etc...)  # noqa: E501

        :param user_org_id: The user_org_id of this VotingUserAllOf.
        :type user_org_id: str
        """

        self._user_org_id = user_org_id
