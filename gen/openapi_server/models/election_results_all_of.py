# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.election import Election
from openapi_server.models.org import Org
from openapi_server import util

from openapi_server.models.election import Election  # noqa: E501
from openapi_server.models.org import Org  # noqa: E501

class ElectionResultsAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, org_info=None, election_info=None):  # noqa: E501
        """ElectionResultsAllOf - a model defined in OpenAPI

        :param org_info: The org_info of this ElectionResultsAllOf.  # noqa: E501
        :type org_info: Org
        :param election_info: The election_info of this ElectionResultsAllOf.  # noqa: E501
        :type election_info: Election
        """
        self.openapi_types = {
            'org_info': Org,
            'election_info': Election
        }

        self.attribute_map = {
            'org_info': 'org_info',
            'election_info': 'election_info'
        }

        self._org_info = org_info
        self._election_info = election_info

    @classmethod
    def from_dict(cls, dikt) -> 'ElectionResultsAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The election_results_allOf of this ElectionResultsAllOf.  # noqa: E501
        :rtype: ElectionResultsAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def org_info(self):
        """Gets the org_info of this ElectionResultsAllOf.


        :return: The org_info of this ElectionResultsAllOf.
        :rtype: Org
        """
        return self._org_info

    @org_info.setter
    def org_info(self, org_info):
        """Sets the org_info of this ElectionResultsAllOf.


        :param org_info: The org_info of this ElectionResultsAllOf.
        :type org_info: Org
        """

        self._org_info = org_info

    @property
    def election_info(self):
        """Gets the election_info of this ElectionResultsAllOf.


        :return: The election_info of this ElectionResultsAllOf.
        :rtype: Election
        """
        return self._election_info

    @election_info.setter
    def election_info(self, election_info):
        """Sets the election_info of this ElectionResultsAllOf.


        :param election_info: The election_info of this ElectionResultsAllOf.
        :type election_info: Election
        """

        self._election_info = election_info
